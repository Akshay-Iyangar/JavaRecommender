<p><span id="displaytitle" title=""></span></p> 
<table style="width:100%; border:solid 1px #71c837; background:#c6e9af; color:#2d5016;" class="noprint"> 
 <tbody> 
  <tr> 
   <td style="text-align:left; width:33%; font-size:90%;"><img alt="" src="//upload.wikimedia.org/wikibooks/en/thumb/d/df/Navigation_Left_Arrow.svg/18px-Navigation_Left_Arrow.svg.png" width="18" height="14" srcset="//upload.wikimedia.org/wikibooks/en/thumb/d/df/Navigation_Left_Arrow.svg/27px-Navigation_Left_Arrow.svg.png 1.5x, //upload.wikimedia.org/wikibooks/en/thumb/d/df/Navigation_Left_Arrow.svg/36px-Navigation_Left_Arrow.svg.png 2x" data-file-width="165" data-file-height="130"> <a href="/wiki/Java_Programming/Reflection/Dynamic_Invocation" title="Java Programming/Reflection/Dynamic Invocation">Dynamic Invocation</a></img></td> 
   <td style="text-align:center; width:34%;"><a href="/wiki/Java_Programming/Reflection" title="Java Programming/Reflection">Java Programming/Reflection</a><br> <b>Accessing Private Features with Reflection</b></br></td> 
   <td style="text-align:right; width:33%; font-size:90%;"><a href="/wiki/Java_Programming/Reflection/Networking" title="Java Programming/Reflection/Networking" class="mw-redirect">Networking</a> <img alt="" src="//upload.wikimedia.org/wikibooks/en/thumb/e/ea/Navigation_Right_Arrow.svg/18px-Navigation_Right_Arrow.svg.png" width="18" height="14" srcset="//upload.wikimedia.org/wikibooks/en/thumb/e/ea/Navigation_Right_Arrow.svg/27px-Navigation_Right_Arrow.svg.png 1.5x, //upload.wikimedia.org/wikibooks/en/thumb/e/ea/Navigation_Right_Arrow.svg/36px-Navigation_Right_Arrow.svg.png 2x" data-file-width="165" data-file-height="130" /></td> 
  </tr> 
 </tbody> 
</table> 
<p>All features of a class can be obtained via reflection, including access to <code><a href="/wiki/Java_Programming/Keywords/private" title="Java Programming/Keywords/private"><font style="color:DodgerBlue4; text-decoration: none; font-weight: bold;">private</font></a></code> methods &amp; variables. But not always see <a rel="nofollow" class="external autonumber" href="http://www.onjava.com/pub/a/onjava/2003/11/12/reflection.html">[1]</a>. Let us look at the following example:</p> 
<table style="padding:2px; margin:2px;"> 
 <tbody> 
  <tr valign="top"> 
   <td style="width:32px;"><img alt="Computer code" src="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/32px-Gnome-settings-accessibility-keyboard.svg.png" title="Computer code" width="32" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/48px-Gnome-settings-accessibility-keyboard.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/64px-Gnome-settings-accessibility-keyboard.svg.png 2x" data-file-width="60" data-file-height="60" /></td> 
   <td style="background-color:#ffeee0; border-left: 4px solid orange; padding-left: 6px; font-family: Monaco, Consolas, 'Courier New', Courier; font-size:1.0em; line-height:1.5 !important;"><span id="code-listing-3"><b>Code listing 10.3: Secret.java</b></span> 
    <div class="mw-highlight mw-content-ltr" dir="ltr"> 
     <pre>
<span class="lineno">1 </span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Secret</span> <span class="o">{</span>
<span class="lineno">2 </span>  <span class="kd">private</span> <span class="n">String</span> <span class="n">secretCode</span> <span class="o">=</span> <span class="s">"It's a secret"</span><span class="o">;</span>
<span class="lineno">3 </span> 
<span class="lineno">4 </span>  <span class="kd">private</span> <span class="n">String</span> <span class="nf">getSecretCode</span><span class="o">()</span> <span class="o">{</span>
<span class="lineno">5 </span>    <span class="k">return</span> <span class="n">secretCode</span><span class="o">;</span>     
<span class="lineno">6 </span>  <span class="o">}</span>
<span class="lineno">7 </span><span class="o">}</span>
</pre> 
    </div> </td> 
  </tr> 
 </tbody> 
</table> 
<p>Although the field and method are marked <code><a href="/wiki/Java_Programming/Keywords/private" title="Java Programming/Keywords/private"><font style="color:DodgerBlue4; text-decoration: none; font-weight: bold;">private</font></a></code>, the following class shows that it is possible to access the <code><a href="/wiki/Java_Programming/Keywords/private" title="Java Programming/Keywords/private"><font style="color:DodgerBlue4; text-decoration: none; font-weight: bold;">private</font></a></code> features of a class:</p> 
<table style="width: 100%;"> 
 <tbody> 
  <tr> 
   <td valign="top"> 
    <table style="padding:2px; margin:2px;"> 
     <tbody> 
      <tr valign="top"> 
       <td style="width:32px;"><img alt="Computer code" src="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/32px-Gnome-settings-accessibility-keyboard.svg.png" title="Computer code" width="32" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/48px-Gnome-settings-accessibility-keyboard.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/64px-Gnome-settings-accessibility-keyboard.svg.png 2x" data-file-width="60" data-file-height="60" /></td> 
       <td style="background-color:#ffeee0; border-left: 4px solid orange; padding-left: 6px; font-family: Monaco, Consolas, 'Courier New', Courier; font-size:1.0em; line-height:1.5 !important;"><span id="code-listing-4"><b>Code listing 10.4: Hacker.java</b></span> 
        <div class="mw-highlight mw-content-ltr" dir="ltr"> 
         <pre>
<span class="lineno"> 1 </span><span class="kn">import</span> <span class="nn">java.lang.reflect.Field</span><span class="o">;</span>
<span class="lineno"> 2 </span><span class="kn">import</span> <span class="nn">java.lang.reflect.InvocationTargetException</span><span class="o">;</span>
<span class="lineno"> 3 </span><span class="kn">import</span> <span class="nn">java.lang.reflect.Method</span><span class="o">;</span>
<span class="lineno"> 4 </span> 
<span class="lineno"> 5 </span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Hacker</span> <span class="o">{</span>
<span class="lineno"> 6 </span> 
<span class="lineno"> 7 </span>   <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Object</span><span class="o">[]</span> <span class="n">EMPTY</span> <span class="o">=</span> <span class="o">{};</span>
<span class="lineno"> 8 </span> 
<span class="lineno"> 9 </span>   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">reflect</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">IllegalAccessException</span><span class="o">,</span> <span class="n">IllegalArgumentException</span><span class="o">,</span> <span class="n">InvocationTargetException</span> <span class="o">{</span>
<span class="lineno">10 </span>     <span class="n">Secret</span> <span class="n">instance</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Secret</span><span class="o">();</span>
<span class="lineno">11 </span>     <span class="n">Class</span><span class="o">&lt;?&gt;</span> <span class="n">secretClass</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getClass</span><span class="o">();</span>
<span class="lineno">12 </span> 
<span class="lineno">13 </span>     <span class="c1">// Print all the method names &amp; execution result</span>
<span class="lineno">14 </span>     <span class="n">Method</span> <span class="n">methods</span><span class="o">[]</span> <span class="o">=</span> <span class="n">secretClass</span><span class="o">.</span><span class="na">getDeclaredMethods</span><span class="o">();</span>
<span class="lineno">15 </span>     <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Access all the methods"</span><span class="o">);</span>
<span class="lineno">16 </span>     <span class="k">for</span> <span class="o">(</span><span class="n">Method</span> <span class="n">method</span> <span class="o">:</span> <span class="n">methods</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">17 </span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Method Name: "</span> <span class="o">+</span> <span class="n">method</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
<span class="lineno">18 </span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Return type: "</span> <span class="o">+</span> <span class="n">method</span><span class="o">.</span><span class="na">getReturnType</span><span class="o">());</span>
<span class="lineno">19 </span>        <span class="n">method</span><span class="o">.</span><span class="na">setAccessible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
<span class="lineno">20 </span><span class="hll">        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">method</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">instance</span><span class="o">,</span> <span class="n">EMPTY</span><span class="o">)</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
</span><span class="lineno">21 </span>     <span class="o">}</span>
<span class="lineno">22 </span> 
<span class="lineno">23 </span>     <span class="c1">// Print all the field names &amp; values</span>
<span class="lineno">24 </span>     <span class="n">Field</span> <span class="n">fields</span><span class="o">[]</span> <span class="o">=</span> <span class="n">secretClass</span><span class="o">.</span><span class="na">getDeclaredFields</span><span class="o">();</span>
<span class="lineno">25 </span>     <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Access all the fields"</span><span class="o">);</span>
<span class="lineno">26 </span>     <span class="k">for</span> <span class="o">(</span><span class="n">Field</span> <span class="n">field</span> <span class="o">:</span> <span class="n">fields</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">27 </span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Field Name: "</span> <span class="o">+</span> <span class="n">field</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
<span class="lineno">28 </span>        <span class="n">field</span><span class="o">.</span><span class="na">setAccessible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
<span class="lineno">29 </span><span class="hll">        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">field</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">instance</span><span class="o">)</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
</span><span class="lineno">30 </span>     <span class="o">}</span>
<span class="lineno">31 </span>  <span class="o">}</span>
<span class="lineno">32 </span> 
<span class="lineno">33 </span>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">34 </span>    <span class="n">Hacker</span> <span class="n">newHacker</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Hacker</span><span class="o">();</span>
<span class="lineno">35 </span> 
<span class="lineno">36 </span>    <span class="k">try</span> <span class="o">{</span>
<span class="lineno">37 </span><span class="hll">      <span class="n">newHacker</span><span class="o">.</span><span class="na">reflect</span><span class="o">();</span>
</span><span class="lineno">38 </span>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">39 </span>      <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
<span class="lineno">40 </span>    <span class="o">}</span>
<span class="lineno">41 </span>  <span class="o">}</span>
<span class="lineno">42 </span><span class="o">}</span>
</pre> 
        </div> </td> 
      </tr> 
     </tbody> 
    </table> </td> 
   <td valign="top"> 
    <table style="padding:2px; margin:2px; width:100%;"> 
     <tbody> 
      <tr valign="top"> 
       <td style="width:32px;"><img alt="Standard input or output" src="//upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Nuvola_apps_display.png/32px-Nuvola_apps_display.png" title="Standard input or output" width="32" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Nuvola_apps_display.png/48px-Nuvola_apps_display.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Nuvola_apps_display.png/64px-Nuvola_apps_display.png 2x" data-file-width="128" data-file-height="128" /></td> 
       <td style="background-color:#f0f0ff; border-left: 4px solid blue; padding-left: 6px; font-family: Monaco, Consolas, 'Courier New', Courier; font-size:1.0em; line-height:1.5 !important;"><b>Console for Code listing 10.4</b> <pre style="background-color:black; color:white;">
Access all the methods
Method Name: getSecretCode
Return type: class java.lang.String
It's a secret
Access all the fields
Field Name: secretCode
It's a secret
</pre></td> 
      </tr> 
     </tbody> 
    </table> </td> 
  </tr> 
 </tbody> 
</table> 
<div style="clear: both"></div> 
<table style="background: #ffd; border: 1px solid #aaaaaa; padding: 6pt; margin: 12pt 8%; width: 60%; margin: auto;" class="notice noprint notice-todo"> 
 <tbody> 
  <tr> 
   <td style="width: 58px;"> 
    <div class="floatleft"> 
     <img alt="Clipboard" src="//upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Clipboard.svg/45px-Clipboard.svg.png" width="45" height="45" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Clipboard.svg/68px-Clipboard.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Clipboard.svg/90px-Clipboard.svg.png 2x" data-file-width="48" data-file-height="48"> </img>
    </div> </td> 
   <td> <p><b>To do:</b><br> We need to add some explanation of what is going on here.</br></p> </td> 
  </tr> 
 </tbody> 
</table> 
<div style="clear: both"></div>
