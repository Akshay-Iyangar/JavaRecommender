<p>In Java SE 7 and later, any number of underscore characters (<code>_</code>) can appear anywhere between digits in a numerical literal. This feature enables you, for example. to separate groups of digits in numeric literals, which can improve the readability of your code.</p> 
<p>For instance, if your code contains numbers with many digits, you can use an underscore character to separate digits in groups of three, similar to how you would use a punctuation mark like a comma, or a space, as a separator.</p> 
<p>The following example shows other ways you can use the underscore in numeric literals:</p> 
<div class="codeblock"> 
 <pre>
long creditCardNumber = 1234_5678_9012_3456L;
long socialSecurityNumber = 999_99_9999L;
float pi =  3.14_15F;
long hexBytes = 0xFF_EC_DE_5E;
long hexWords = 0xCAFE_BABE;
long maxLong = 0x7fff_ffff_ffff_ffffL;
byte nybbles = 0b0010_0101;
long bytes = 0b11010010_01101001_10010100_10010010;
</pre> 
</div> 
<p>You can place underscores only between digits; you cannot place underscores in the following places:</p> 
<ul> 
 <li>At the beginning or end of a number</li> 
 <li>Adjacent to a decimal point in a floating point literal</li> 
 <li>Prior to an <code>F</code> or <code>L</code> suffix</li> 
 <li>In positions where a string of digits is expected</li> 
</ul> 
<p>The following examples demonstrate valid and invalid underscore placements (which are highlighted) in numeric literals:</p> 
<div class="codeblock"> 
 <pre>
// <strong>Invalid: cannot put underscores</strong>
// <strong>adjacent to a decimal point</strong>
float pi1 = 3_.1415F;
// <strong>Invalid: cannot put underscores</strong> 
// <strong>adjacent to a decimal point</strong>
float pi2 = 3._1415F;
// <strong>Invalid: cannot put underscores</strong> 
// <strong>prior to an L suffix</strong>
long socialSecurityNumber1 = 999_99_9999_L;

// OK (decimal literal)
int x1 = 5_2;
// <strong>Invalid: cannot put underscores</strong>
// <strong>At the end of a literal</strong>
int x2 = 52_;
// OK (decimal literal)
int x3 = 5_______2;

// <strong>Invalid: cannot put underscores</strong>
// <strong>in the 0x radix prefix</strong>
int x4 = 0_x52;
// <strong>Invalid: cannot put underscores</strong>
// <strong>at the beginning of a number</strong>
int x5 = 0x_52;
// OK (hexadecimal literal)
int x6 = 0x5_2; 
// <strong>Invalid: cannot put underscores</strong>
// <strong>at the end of a number</strong>
int x7 = 0x52_;
</pre> 
</div>
