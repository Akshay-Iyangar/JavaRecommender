<table> 
 <tbody> 
  <tr> 
   <td> <pre>
<span style="color: purple"><b>public</b></span> <span style="color: purple"><b>class</b></span> <span style="color: grey">Distance</span> {
   <span style="color: purple"><b>private</b></span> java.awt.<span style="color: grey">Point</span> <span style="color: grey">point0</span>, <span style="color: grey">point1</span>;

   <span style="color: purple"><b>public</b></span> <span style="color: grey">Distance</span>(<span style="color: purple"><b>int</b></span> <span style="color: grey">x0</span>, <span style="color: purple"><b>int</b></span> <span style="color: grey">y0</span>, <span style="color: purple"><b>int</b></span> <span style="color: grey">x1</span>, <span style="color: purple"><b>int</b></span> <span style="color: grey">y1</span>) {
     <span style="color: grey">point0</span> = <span style="color: purple"><b>new</b></span> java.awt.<span style="color: grey">Point</span>(<span style="color: grey">x0</span>, <span style="color: grey">y0</span>);
     <span style="color: grey">point1</span> = <span style="color: purple"><b>new</b></span> java.awt.<span style="color: grey">Point</span>(<span style="color: grey">x1</span>, <span style="color: grey">y1</span>);
   }

   <span style="color: purple"><b>public</b></span> <span style="color: purple"><b>void</b></span> <span style="color: grey">printDistance</span>() {
     <span style="color: grey">System</span>.<span style="color: grey">out</span>.<span style="color: grey">println</span>(<span style="color: blue">"Distance between "</span> <span style="color: red">+</span> <span style="color: grey">point0</span> <span style="color: red">+</span> <span style="color: blue">" and "</span> <span style="color: red">+</span> <span style="color: grey">point1</span>
                     <span style="color: red">+</span> <span style="color: blue">" is "</span> <span style="color: red">+</span> <span style="color: grey">point0</span>.<span style="color: grey">distance</span>(<span style="color: grey">point1</span>));
   }

   <span style="color: purple"><b>public</b></span> <span style="color: purple"><b>static</b></span> <span style="color: purple"><b>void</b></span> <span style="color: grey">main</span>(<span style="color: grey">String</span>[] <span style="color: grey">args</span>) {
     <span style="color: grey">Distance</span> <span style="color: grey">dist</span> = <span style="color: purple"><b>new</b></span> <span style="color: grey">Distance</span>(
              <span style="color: grey">intValue</span>(<span style="color: grey">args</span>[<span style="color: orange">0</span>]), <span style="color: grey">intValue</span>(<span style="color: grey">args</span>[<span style="color: orange">1</span>]),
              <span style="color: grey">intValue</span>(<span style="color: grey">args</span>[<span style="color: orange">2</span>]), <span style="color: grey">intValue</span>(<span style="color: grey">args</span>[<span style="color: orange">3</span>]));
     <span style="color: grey">dist.<span style="color: grey">printDistance(); } <span style="color: purple"><b>private</b></span> <span style="color: purple"><b>static</b></span> <span style="color: purple"><b>int</b></span> <span style="color: grey">intValue</span>(<span style="color: grey">String</span> <span style="color: grey">data</span>) { <span style="color: purple"><b>return</b></span> <span style="color: grey">Integer</span>.<span style="color: grey">parseInt</span>(<span style="color: grey">data</span>); } } </span></span>
</pre></td> 
  </tr> 
 </tbody> 
</table> 
<dl> 
 <dd> 
  <span id="figure-1">Figure 2.1</span>: Basic Java syntax. 
  <dl> 
   <dd> 
    <i>For a further treatment of the syntax elements of Java, see also <a href="/wiki/Java_Programming/Syntax" title="Java Programming/Syntax" class="mw-redirect">Syntax</a>.</i> 
   </dd> 
  </dl> 
 </dd> 
</dl> 
<p>The <i>syntax</i> of a Java class is the characters, symbols and their structure used to code the class. Java programs consist of a sequence of tokens. There are different kinds of tokens. For example, there are word tokens such as <code><a href="/wiki/Java_Programming/Keywords/class" title="Java Programming/Keywords/class"><font style="color:DodgerBlue4; text-decoration: none; font-weight: bold;">class</font></a></code> and <code><a href="/wiki/Java_Programming/Keywords/public" title="Java Programming/Keywords/public"><font style="color:DodgerBlue4; text-decoration: none; font-weight: bold;">public</font></a></code> which represent <i><a href="/wiki/Java_Programming/Keywords" title="Java Programming/Keywords"><span style="color: purple"><b>keywords</b></span></a></i> <span style="color: purple"><b>(in purple</b></span> <a href="#figure-1"><span style="color: purple"><b>above</b></span></a><span style="color: purple"><b>)</b></span> â€” special words with reserved meaning in Java. Other words such as <code>Distance</code>, <code>point0</code>, <code>x1</code>, and <code>printDistance</code> are not keywords but <span style="color: grey"><i>identifiers</i> (in grey)</span>. Identifiers have many different uses in Java but primarily they are used as names. Java also has tokens to represent numbers, such as <code>1</code> and <code>3</code>; these are known as <i><a href="/wiki/Java_Programming/Literals" title="Java Programming/Literals"><span style="color: orange">literals</span></a></i> <span style="color: orange">(in orange)</span>. <i><a href="/wiki/Java_Programming/Literals/String_Literals" title="Java Programming/Literals/String Literals" class="mw-redirect"><span style="color: blue">String literals</span></a></i> <span style="color: blue">(in blue)</span>, such as <code>"Distance between "</code>, consist of zero or more characters embedded in double quotes, and <i><a href="/wiki/Java_Programming/Operators" title="Java Programming/Operators" class="mw-redirect"><span style="color: red">operators</span></a></i> <span style="color: red">(in red)</span> such as <code>+</code> and <code>=</code> are used to express basic computation such as addition or String concatenation or assignment. There are also left and right braces (<code>{</code> and <code>}</code>) which enclose <i>blocks</i>. The body of a class is one such block. Some tokens are punctuation, such as periods <code>.</code> and commas <code>,</code> and semicolons <code>;</code>. You use <i>whitespace</i> such as spaces, tabs, and newlines, to separate tokens. For example, whitespace is required between keywords and identifiers: <code>publicstatic</code> is a single identifier with twelve characters, not two Java keywords.</p>
