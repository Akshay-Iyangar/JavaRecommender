<p><span id="displaytitle" title=""></span></p> 
<table style="width:100%; border:solid 1px #71c837; background:#c6e9af; color:#2d5016;" class="noprint"> 
 <tbody> 
  <tr> 
   <td style="text-align:left; width:33%; font-size:90%;"><img alt="" src="//upload.wikimedia.org/wikibooks/en/thumb/d/df/Navigation_Left_Arrow.svg/18px-Navigation_Left_Arrow.svg.png" width="18" height="14" srcset="//upload.wikimedia.org/wikibooks/en/thumb/d/df/Navigation_Left_Arrow.svg/27px-Navigation_Left_Arrow.svg.png 1.5x, //upload.wikimedia.org/wikibooks/en/thumb/d/df/Navigation_Left_Arrow.svg/36px-Navigation_Left_Arrow.svg.png 2x" data-file-width="165" data-file-height="130"> <a href="/wiki/Java_Programming/Throwing_and_Catching_Exceptions" title="Java Programming/Throwing and Catching Exceptions">Throwing and Catching Exceptions</a></img></td> 
   <td style="text-align:center; width:34%;"><a href="/wiki/Java_Programming" title="Java Programming">Java Programming</a><br> <b>Checked Exceptions</b></br></td> 
   <td style="text-align:right; width:33%; font-size:90%;"><a href="/wiki/Java_Programming/Unchecked_Exceptions" title="Java Programming/Unchecked Exceptions">Unchecked Exceptions</a> <img alt="" src="//upload.wikimedia.org/wikibooks/en/thumb/e/ea/Navigation_Right_Arrow.svg/18px-Navigation_Right_Arrow.svg.png" width="18" height="14" srcset="//upload.wikimedia.org/wikibooks/en/thumb/e/ea/Navigation_Right_Arrow.svg/27px-Navigation_Right_Arrow.svg.png 1.5x, //upload.wikimedia.org/wikibooks/en/thumb/e/ea/Navigation_Right_Arrow.svg/36px-Navigation_Right_Arrow.svg.png 2x" data-file-width="165" data-file-height="130" /></td> 
  </tr> 
 </tbody> 
</table> 
<p><br> A checked exception is an exception that must be either caught or declared in a method where it can be thrown. For example, the <code>java.io.IOException</code> is a checked exception. To understand what is a checked exception, consider the following code:</br></p> 
<table style="padding:2px; margin:2px;"> 
 <tbody> 
  <tr valign="top"> 
   <td><a href="/wiki/File:Nuvola_apps_important.svg" class="image" title="Warning"><img alt="Warning" src="//upload.wikimedia.org/wikipedia/commons/thumb/f/f7/Nuvola_apps_important.svg/32px-Nuvola_apps_important.svg.png" width="32" height="27" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/f/f7/Nuvola_apps_important.svg/48px-Nuvola_apps_important.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/f/f7/Nuvola_apps_important.svg/64px-Nuvola_apps_important.svg.png 2x" data-file-width="600" data-file-height="500" /></a></td> 
   <td style="background-color:#fff0f0; border-left: 4px solid red; padding-left: 6px;"><span id="code-section-9" style="color: red;"><b>Code section 6.9: Unhandled exception.</b></span> 
    <div class="mw-highlight mw-content-ltr" dir="ltr"> 
     <pre>
<span class="lineno">1 </span><span class="kd">public</span> <span class="kt">void</span> <span class="nf">ioOperation</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">isResourceAvailable</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">2 </span>  <span class="k">if</span> <span class="o">(!</span><span class="n">isResourceAvailable</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">3 </span><span class="hll">    <span class="k">throw</span> <span class="k">new</span> <span class="n">IOException</span><span class="o">();</span>
</span><span class="lineno">4 </span>  <span class="o">}</span>
<span class="lineno">5 </span><span class="o">}</span>
</pre> 
    </div> </td> 
  </tr> 
 </tbody> 
</table> 
<p>This code won't compile as it throws or can throw a checked exception without catching it or declare it. Two different modifications can resolve the situation: to catching it or to declare it by the <code><a href="/wiki/Java_Programming/Keywords/throws" title="Java Programming/Keywords/throws"><font style="color:DodgerBlue4; text-decoration: none; font-weight: bold;">throws</font></a></code> keyword.</p> 
<table style="width: 100%;"> 
 <tbody> 
  <tr> 
   <td valign="top"> 
    <table style="padding:2px; margin:2px;"> 
     <tbody> 
      <tr valign="top"> 
       <td style="width:32px;"><img alt="Example" src="//upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Nuvola_apps_edu_miscellaneous.svg/32px-Nuvola_apps_edu_miscellaneous.svg.png" title="Example" width="32" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Nuvola_apps_edu_miscellaneous.svg/48px-Nuvola_apps_edu_miscellaneous.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Nuvola_apps_edu_miscellaneous.svg/64px-Nuvola_apps_edu_miscellaneous.svg.png 2x" data-file-width="128" data-file-height="128" /></td> 
       <td style="background-color:#f0fff0; border-left: 4px solid green; padding-left: 6px;"><span id="code-section-10"><b>Code section 6.10: Catching an exception.</b></span> 
        <div class="mw-highlight mw-content-ltr" dir="ltr"> 
         <pre>
<span class="lineno">1 </span><span class="kd">public</span> <span class="kt">void</span> <span class="nf">ioOperation</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">isResourceAvailable</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">2 </span><span class="hll">  <span class="k">try</span> <span class="o">{</span>
</span><span class="lineno">3 </span>    <span class="k">if</span> <span class="o">(!</span><span class="n">isResourceAvailable</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">4 </span>      <span class="k">throw</span> <span class="k">new</span> <span class="n">IOException</span><span class="o">();</span>
<span class="lineno">5 </span>    <span class="o">}</span>
<span class="lineno">6 </span><span class="hll">  <span class="o">}</span> <span class="k">catch</span><span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class="lineno">7 </span><span class="hll">    <span class="c1">// Handle caught exceptions.</span>
</span><span class="lineno">8 </span><span class="hll">  <span class="o">}</span>
</span><span class="lineno">9 </span><span class="o">}</span>
</pre> 
        </div> </td> 
      </tr> 
     </tbody> 
    </table> </td> 
   <td valign="top"> 
    <table style="padding:2px; margin:2px;"> 
     <tbody> 
      <tr valign="top"> 
       <td style="width:32px;"><img alt="Example" src="//upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Nuvola_apps_edu_miscellaneous.svg/32px-Nuvola_apps_edu_miscellaneous.svg.png" title="Example" width="32" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Nuvola_apps_edu_miscellaneous.svg/48px-Nuvola_apps_edu_miscellaneous.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/6/6a/Nuvola_apps_edu_miscellaneous.svg/64px-Nuvola_apps_edu_miscellaneous.svg.png 2x" data-file-width="128" data-file-height="128" /></td> 
       <td style="background-color:#f0fff0; border-left: 4px solid green; padding-left: 6px;"><span id="code-section-11"><b>Code section 6.11: Declaring an exception.</b></span> 
        <div class="mw-highlight mw-content-ltr" dir="ltr"> 
         <pre>
<span class="lineno">1 </span><span class="hll"><span class="kd">public</span> <span class="kt">void</span> <span class="nf">ioOperation</span><span class="o">(</span><span class="kt">boolean</span> <span class="n">isResourceAvailable</span><span class="o">)</span> <span class="kd">throws</span> <span class="n">IOException</span> <span class="o">{</span>
</span><span class="lineno">2 </span>  <span class="k">if</span> <span class="o">(!</span><span class="n">isResourceAvailable</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">3 </span>    <span class="k">throw</span> <span class="k">new</span> <span class="n">IOException</span><span class="o">();</span>
<span class="lineno">4 </span>  <span class="o">}</span>
<span class="lineno">5 </span><span class="o">}</span>
</pre> 
        </div> </td> 
      </tr> 
     </tbody> 
    </table> </td> 
  </tr> 
 </tbody> 
</table> 
<p>In the Java class hierarchy, an exception is a checked exception if it inherits from <code>java.lang.Exception</code>, but not from <code>java.lang.RuntimeException</code>. All the application or business logic exceptions should be checked exceptions.</p> 
<p>It is possible that a method declares that it can throw an exception, but actually it does not. Still, the caller has to deal with it. The checked exception declaration has a domino effect. Any methods that will use the previous method will also have to handle the checked exception, and so on.</p> 
<p>So the compiler for the Java programming language checks, at compile time, that a program contains handlers for all application exceptions, by analyzing each method body. If, by executing the method body, an exception can be thrown to the caller, that exception must be declared. How does the compiler know whether a method body can throw an exception? That is easy. Inside the method body, there are calls to other methods; the compiler looks at each of their method signature, what exceptions they declared to throw.</p>
