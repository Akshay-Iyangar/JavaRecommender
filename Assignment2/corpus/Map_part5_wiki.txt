<dl> 
 <dt> 
  <span style="color: grey;">java.util.</span>TreeMap 
  <span style="color: grey;">&lt;E&gt;</span> 
 </dt> 
 <dd>
   guarantees that the map will be in ascending key order, sorted according to the natural order for the key's class, not-synchronized. 
 </dd> 
 <dt> 
  <span style="color: grey;">java.util.</span>Hashtable 
  <span style="color: grey;">&lt;E&gt;</span>&nbsp; 
 </dt> 
 <dd>
   Synchronized, null can not be used as key 
 </dd> 
 <dt> 
  <span style="color: grey;">java.util.</span>HashMap 
  <span style="color: grey;">&lt;E&gt;</span>&nbsp; 
 </dt> 
 <dd>
   is roughly equivalent to Hashtable, except that it is unsynchronized and permits nulls 
 </dd> 
 <dt> 
  <span style="color: grey;">java.util.concurrent.</span>ConcurrentHashMap&nbsp; 
 </dt> 
 <dd>
   same as Hashtable, plus retrieval operations (including get) generally do not block, so may overlap with update operations (including put and remove). 
 </dd> 
 <dt> 
  <span style="color: grey;">java.util.</span>WeakHashMap 
  <span style="color: grey;">&lt;E&gt;</span>&nbsp; 
 </dt> 
 <dd>
   entry in a WeakHashMap will automatically be removed when its key is no longer in ordinary use. Non-synchronized. 
 </dd> 
 <dt> 
  <span style="color: grey;">java.util.</span>LinkedHashMap 
  <span style="color: grey;">&lt;E&gt;</span>&nbsp; 
 </dt> 
 <dd>
   This linked list defines the iteration ordering, which is normally the order in which keys were first inserted into the map (first insertion-order). Note that insertion order is not affected if a key is re-inserted into the map. 
 </dd> 
 <dt> 
  <span style="color: grey;">java.util.</span>IdentityHashMap&nbsp; 
 </dt> 
 <dd>
   This class implements the Map interface with a hash table, using reference-equality in place of object-equality when comparing keys (and values). In other words, in an IdentityHashMap, two keys k1 and k2 are considered equal if and only 
  <code>if (k1==k2)</code>. (In normal Map implementations (like HashMap) two keys k1 and k2 are considered equal if and only 
  <code>if (k1==null&nbsp;? k2==null&nbsp;: k1.equals(k2))</code>.) Not-synchronized. 
 </dd> 
 <dt> 
  <span style="color: grey;">java.util.</span>EnumMap&nbsp; 
 </dt> 
 <dd>
   All of the keys in an enum map must come from a single enum type that is specified, explicitly or implicitly, when the map is created. Enum maps are represented internally as arrays. This representation is extremely compact and efficient. Not-synchronized. 
 </dd> 
</dl>
