<p>In the Java programming language, there are four kinds of variables.</p> 
<table style="padding:2px; margin:2px;"> 
 <tbody> 
  <tr valign="top"> 
   <td style="width:32px;"><img alt="Computer code" src="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/32px-Gnome-settings-accessibility-keyboard.svg.png" title="Computer code" width="32" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/48px-Gnome-settings-accessibility-keyboard.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/64px-Gnome-settings-accessibility-keyboard.svg.png 2x" data-file-width="60" data-file-height="60" /></td> 
   <td style="background-color:#ffeee0; border-left: 4px solid orange; padding-left: 6px; font-family: Monaco, Consolas, 'Courier New', Courier; font-size:1.0em; line-height:1.5 !important;"><span id="code-listing-9"><b>Code listing 3.9: ClassWithVariables.java</b></span> 
    <div class="mw-highlight mw-content-ltr" dir="ltr"> 
     <pre>
<span class="lineno">1 </span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ClassWithVariables</span> <span class="o">{</span>
<span class="lineno">2 </span><span class="hll">    <span class="kd">public</span> <span class="kt">int</span> <span class="n">id</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class="lineno">3 </span><span class="hll">    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">boolean</span> <span class="n">isClassUsed</span><span class="o">;</span>
</span><span class="lineno">4 </span>
<span class="lineno">5 </span><span class="hll">    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">processData</span><span class="o">(</span><span class="n">String</span> <span class="n">parameter</span><span class="o">)</span> <span class="o">{</span>
</span><span class="lineno">6 </span><span class="hll">      <span class="n">Object</span> <span class="n">currentValue</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</span><span class="lineno">7 </span>    <span class="o">}</span>
<span class="lineno">8 </span><span class="o">}</span>
</pre> 
    </div> </td> 
  </tr> 
 </tbody> 
</table> 
<p>In the <a href="#code-listing-9">code listing 3.9</a>, are examples of all four kinds of variables.</p> 
<ul> 
 <li><b>Instance variables</b>: These are variables that are used to store the state of an object (for example, <code>id</code>). Every object created from a class definition would have its own copy of the variable. It is valid for and occupies storage for as long as the corresponding object is in memory.</li> 
 <li><b>Class variables</b>: These variables are explicitly defined within the class-level scope with a <code><a href="/wiki/Java_Programming/Keywords/static" title="Java Programming/Keywords/static"><font style="color:DodgerBlue4; text-decoration: none; font-weight: bold;">static</font></a></code> modifier (for example, <code>isClassUsed</code>). No other variables can have a <code>static</code> modifier attached to them. Because these variables are defined with the <code>static</code> modifier, there would always be a single copy of these variables no matter how many times the class has been instantiated. They live as long as the class is loaded in memory.</li> 
 <li><b>Parameters</b> or <b>Arguments</b>: These are variables passed into a method signature (for example, <code>parameter</code>). Recall the usage of the <code>args</code> variable in the main method. They are not attached to modifiers (i.e. <code>public</code>, <code>private</code>, <code>protected</code> or <code>static</code>) and they can be used everywhere in the method. They are in memory during the execution of the method and can't be used after the method returns.</li> 
 <li><b>Local variables</b>: These variables are defined and used specifically within the method-level scope (for example, <code>currentValue</code>) but not in the method signature. They do not have any modifiers attached to it. They no longer exist after the method has returned.</li> 
</ul> 
<div class="collapsible" style="width:100%; clear:both; border:none;"> 
 <div class="title" style="background:transparent; text-align:left; background:#cedff2;border:1px solid lightgrey;">
   Test your knowledge 
 </div> 
 <div class="body" style="background:transparent; text-align:left; background:#e7eff9;border:solid 1px lightgrey;padding:8px;"> 
  <p><b>Question 3.5</b>: Consider the following code:</p> 
  <table style="padding:2px; margin:2px;"> 
   <tbody> 
    <tr valign="top"> 
     <td style="width:32px;"><img alt="Computer code" src="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/32px-Gnome-settings-accessibility-keyboard.svg.png" title="Computer code" width="32" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/48px-Gnome-settings-accessibility-keyboard.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/64px-Gnome-settings-accessibility-keyboard.svg.png 2x" data-file-width="60" data-file-height="60" /></td> 
     <td style="background-color:#ffeee0; border-left: 4px solid orange; padding-left: 6px; font-family: Monaco, Consolas, 'Courier New', Courier; font-size:1.0em; line-height:1.5 !important;"><span id="question-5"><b>Question 3.5: SomeClass.java</b></span> 
      <div class="mw-highlight mw-content-ltr" dir="ltr"> 
       <pre>
<span class="lineno"> 1 </span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SomeClass</span> <span class="o">{</span>
<span class="lineno"> 2 </span>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="lineno"> 3 </span>  <span class="kd">public</span> <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="n">c</span><span class="o">;</span>
<span class="lineno"> 4 </span>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">b</span><span class="o">;</span>
<span class="lineno"> 5 </span>
<span class="lineno"> 6 </span>  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">someMethod</span><span class="o">(</span><span class="kt">int</span> <span class="n">d</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno"> 7 </span>    <span class="n">d</span> <span class="o">=</span> <span class="n">c</span><span class="o">;</span>
<span class="lineno"> 8 </span>    <span class="kt">int</span> <span class="n">e</span><span class="o">;</span>
<span class="lineno"> 9 </span>  <span class="o">}</span>
<span class="lineno">10 </span><span class="o">}</span>
</pre> 
      </div> </td> 
    </tr> 
   </tbody> 
  </table> 
  <p>In the example above, we created five variables: <code>a</code>, <code>b</code>, <code>c</code>, <code>d</code> and <code>e</code>. All these variables have the same data type <code>int</code> (integer). However, can you tell what kind of variable each one is?</p> 
  <div class="collapsible" style="width:100%; clear:both; border:none;"> 
   <div class="title" style="background:transparent; text-align:left; background:#cedff2;border:1px solid lightgrey;">
     Answer 
   </div> 
   <div class="body" style="background:transparent; text-align:left; background:#e7eff9;border:solid 1px lightgrey;padding:8px;"> 
    <ul> 
     <li><code>a</code> and <code>b</code> are <b>instance variables</b>;</li> 
     <li><code>c</code> is a <b>class variable</b>;</li> 
     <li><code>d</code> is a <b>parameter</b> or <b>argument</b>; and,</li> 
     <li><code>e</code> is a <b>local variable</b>.</li> 
    </ul> 
   </div> 
  </div> 
 </div> 
</div>
