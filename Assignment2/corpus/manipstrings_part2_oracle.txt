<p>You can get the character at a particular index within a string by invoking the <code>charAt()</code> accessor method. The index of the first character is 0, while the index of the last character is <code>length()-1</code>. For example, the following code gets the character at index 9 in a string:</p> 
<div class="codeblock"> 
 <pre>
String anotherPalindrome = "Niagara. O roar again!"; 
char aChar = anotherPalindrome.charAt(9);
</pre> 
</div> 
<p>Indices begin at 0, so the character at index 9 is 'O', as illustrated in the following figure: 
 <!-- figure --></p> 
<center> 
 <img src="https://docs.oracle.com/javase/tutorial/figures/java/objects-charAt.gif" width="569" height="78" align="bottom" alt="Use the charAt method to get a character at a particular index."> </img>
</center> 
<p>If you want to get more than one consecutive character from a string, you can use the <code>substring</code> method. The <code>substring</code> method has two versions, as shown in the following table:</p> 
<table width="100%" border="1" cellpadding="4" cellspacing="3" summary="This table lists String methods"> 
 <caption style="font-weight: bold">
   The 
  <code>substring</code> Methods in the 
  <code>String</code> Class 
 </caption> 
 <tbody> 
  <tr> 
   <th id="h1">Method</th> 
   <th id="h2" width="60%">Description</th> 
  </tr> 
  <tr> 
   <td headers="h1"><code>String substring(int beginIndex, int endIndex)</code></td> 
   <td headers="h2">Returns a new string that is a substring of this string. The substring begins at the specified <code>beginIndex</code> and extends to the character at index <code>endIndex - 1</code>.</td> 
  </tr> 
  <tr> 
   <td headers="h1"><code>String substring(int beginIndex)</code></td> 
   <td headers="h2">Returns a new string that is a substring of this string. The integer argument specifies the index of the first character. Here, the returned substring extends to the end of the original string.</td> 
  </tr> 
 </tbody> 
</table> 
<p>The following code gets from the Niagara palindrome the substring that extends from index 11 up to, but not including, index 15, which is the word "roar":</p> 
<div class="codeblock"> 
 <pre>
String anotherPalindrome = "Niagara. O roar again!"; 
String roar = anotherPalindrome.substring(11, 15); 
</pre> 
</div> 
<!-- figure --> 
<center> 
 <img src="https://docs.oracle.com/javase/tutorial/figures/java/objects-substring.gif" width="482" height="90" align="bottom" alt="Use the substring method to get part of a string."> </img>
</center>
