<div id="PageContent"> 
 <p> There are some situations where you want to apply the same annotation to a declaration or type use. As of the Java SE 8 release, <em>repeating annotations</em> enable you to do this.</p> 
 <p> For example, you are writing code to use a timer service that enables you to run a method at a given time or on a certain schedule, similar to the UNIX <tt>cron</tt> service. Now you want to set a timer to run a method, <tt>doPeriodicCleanup</tt>, on the last day of the month and on every Friday at 11:00 p.m. To set the timer to run, create an <code>@Schedule</code> annotation and apply it twice to the <tt>doPeriodicCleanup</tt> method. The first use specifies the last day of the month and the second specifies Friday at 11p.m., as shown in the following code example:</p> 
 <div class="codeblock"> 
  <pre>
@Schedule(dayOfMonth="last")
@Schedule(dayOfWeek="Fri", hour="23")
public void doPeriodicCleanup() { ... }
</pre> 
 </div> 
 <p> The previous example applies an annotation to a method. You can repeat an annotation anywhere that you would use a standard annotation. For example, you have a class for handling unauthorized access exceptions. You annotate the class with one <code>@Alert</code> annotation for managers and another for admins:</p> 
 <div class="codeblock"> 
  <pre>
@Alert(role="Manager")
@Alert(role="Administrator")
public class UnauthorizedAccessException extends SecurityException { ... }
</pre> 
 </div> 
 <p> For compatibility reasons, repeating annotations are stored in a <em>container annotation</em> that is automatically generated by the Java compiler. In order for the compiler to do this, two declarations are required in your code.</p> 
</div>
