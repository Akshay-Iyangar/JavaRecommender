<p><span id="displaytitle" title=""></span></p> 
<table style="width:100%; border:solid 1px #71c837; background:#c6e9af; color:#2d5016;" class="noprint"> 
 <tbody> 
  <tr> 
   <td style="text-align:left; width:33%; font-size:90%;"><img alt="" src="//upload.wikimedia.org/wikibooks/en/thumb/d/df/Navigation_Left_Arrow.svg/18px-Navigation_Left_Arrow.svg.png" width="18" height="14" srcset="//upload.wikimedia.org/wikibooks/en/thumb/d/df/Navigation_Left_Arrow.svg/27px-Navigation_Left_Arrow.svg.png 1.5x, //upload.wikimedia.org/wikibooks/en/thumb/d/df/Navigation_Left_Arrow.svg/36px-Navigation_Left_Arrow.svg.png 2x" data-file-width="165" data-file-height="130"> <a href="/wiki/Java_Programming/Exceptions" title="Java Programming/Exceptions">Exceptions</a></img></td> 
   <td style="text-align:center; width:34%;"><a href="/wiki/Java_Programming" title="Java Programming">Java Programming</a><br> <b>Throwing and Catching Exceptions</b></br></td> 
   <td style="text-align:right; width:33%; font-size:90%;"><a href="/wiki/Java_Programming/Checked_Exceptions" title="Java Programming/Checked Exceptions">Checked Exceptions</a> <img alt="" src="//upload.wikimedia.org/wikibooks/en/thumb/e/ea/Navigation_Right_Arrow.svg/18px-Navigation_Right_Arrow.svg.png" width="18" height="14" srcset="//upload.wikimedia.org/wikibooks/en/thumb/e/ea/Navigation_Right_Arrow.svg/27px-Navigation_Right_Arrow.svg.png 1.5x, //upload.wikimedia.org/wikibooks/en/thumb/e/ea/Navigation_Right_Arrow.svg/36px-Navigation_Right_Arrow.svg.png 2x" data-file-width="165" data-file-height="130" /></td> 
  </tr> 
 </tbody> 
</table> 
<p><br> Language compilers are adept at pointing out most of the erroneous code in a program, however there are some errors that only become apparent when the program is executed. Consider the <a href="#code-listing-1">code listing 6.1</a>; here, the program defines a method <b>divide</b> that does a simple division operation taking two integers as parameter arguments and returning the result of their division. It can safely be assumed that when the <b>divide(4, 2)</b> statement is called, it would return the number <b>2</b>. However, consider the next statement, where the program relies upon the provided command line arguments to generate a division operation. What if the user provides the number zero (<b>0</b>) as the second argument? We all know that division by zero is impossible, but the compiler couldn't possibly have anticipated the user providing zero as an argument.<br clear="all" /></br></p> 
<table style="width: 100%;"> 
 <tbody> 
  <tr> 
   <td valign="top"> 
    <table style="padding:2px; margin:2px;"> 
     <tbody> 
      <tr valign="top"> 
       <td style="width:32px;"><img alt="Computer code" src="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/32px-Gnome-settings-accessibility-keyboard.svg.png" title="Computer code" width="32" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/48px-Gnome-settings-accessibility-keyboard.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/64px-Gnome-settings-accessibility-keyboard.svg.png 2x" data-file-width="60" data-file-height="60" /></td> 
       <td style="background-color:#ffeee0; border-left: 4px solid orange; padding-left: 6px; font-family: Monaco, Consolas, 'Courier New', Courier; font-size:1.0em; line-height:1.5 !important;"><span id="code-listing-1"><b>Code listing 6.1: SimpleDivisionOperation.java</b></span> 
        <div class="mw-highlight mw-content-ltr" dir="ltr"> 
         <pre>
<span class="lineno"> 1 </span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">SimpleDivisionOperation</span> <span class="o">{</span>
<span class="lineno"> 2 </span>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno"> 3 </span>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">divide</span><span class="o">(</span><span class="mi">4</span><span class="o">,</span> <span class="mi">2</span><span class="o">));</span>
<span class="lineno"> 4 </span>    <span class="k">if</span> <span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="na">length</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno"> 5 </span>      <span class="kt">int</span> <span class="n">arg0</span> <span class="o">=</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">0</span><span class="o">]);</span>
<span class="lineno"> 6 </span>      <span class="kt">int</span> <span class="n">arg1</span> <span class="o">=</span> <span class="n">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">args</span><span class="o">[</span><span class="mi">1</span><span class="o">]);</span>
<span class="lineno"> 7 </span>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">divide</span><span class="o">(</span><span class="n">arg0</span><span class="o">,</span> <span class="n">arg1</span><span class="o">));</span>
<span class="lineno"> 8 </span>    <span class="o">}</span>
<span class="lineno"> 9 </span>  <span class="o">}</span>
<span class="lineno">10 </span>
<span class="lineno">11 </span>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">divide</span><span class="o">(</span><span class="kt">int</span> <span class="n">a</span><span class="o">,</span> <span class="kt">int</span> <span class="n">b</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">12 </span><span class="hll">    <span class="k">return</span> <span class="n">a</span> <span class="o">/</span> <span class="n">b</span><span class="o">;</span>
</span><span class="lineno">13 </span>  <span class="o">}</span>
<span class="lineno">14 </span><span class="o">}</span>
</pre> 
        </div> </td> 
      </tr> 
     </tbody> 
    </table> </td> 
   <td valign="top"> 
    <table style="padding:2px; margin:2px; width:100%;"> 
     <tbody> 
      <tr valign="top"> 
       <td style="width:32px;"><img alt="Standard input or output" src="//upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Nuvola_apps_display.png/32px-Nuvola_apps_display.png" title="Standard input or output" width="32" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Nuvola_apps_display.png/48px-Nuvola_apps_display.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Nuvola_apps_display.png/64px-Nuvola_apps_display.png 2x" data-file-width="128" data-file-height="128" /></td> 
       <td style="background-color:#f0f0ff; border-left: 4px solid blue; padding-left: 6px; font-family: Monaco, Consolas, 'Courier New', Courier; font-size:1.0em; line-height:1.5 !important;"><b>Output for Code listing 6.1</b> <pre style="background-color:black; color:white;">
$ java SimpleDivisionOperation 1 0
2
Exception in thread "main" java.lang.ArithmeticException: / by zero
     at SimpleDivisionOperation.divide(SimpleDivisionOperation.java:12)
     at SimpleDivisionOperation.main(SimpleDivisionOperation.java:7)
</pre></td> 
      </tr> 
     </tbody> 
    </table> </td> 
  </tr> 
 </tbody> 
</table> 
<p>Such <i>exceptional code</i> that results in erroneous interpretations at program runtime usually results in errors that are called <i>exceptions</i> in Java. When the Java interpreter encounters an exceptional code, it halts execution and displays information about the error that occurs. This information is known as a <i>stack trace</i>. The <a href="/wiki/Java_Programming/Stack_trace" title="Java Programming/Stack trace">stack trace</a> in the above example tells us more about the error, such as the thread — <code>"main"</code> — where the exception occurred, the type of exception — <code>java.lang.ArithmeticException</code>, a comprehensible display message — <code>/ by zero</code>, and the exact methods and the line numbers where the exception may have occurred.</p>
