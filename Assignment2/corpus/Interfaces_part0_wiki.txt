<p><span id="displaytitle" title=""></span></p> 
<table style="width:100%; border:solid 1px #71c837; background:#c6e9af; color:#2d5016;" class="noprint"> 
 <tbody> 
  <tr> 
   <td style="text-align:left; width:33%; font-size:90%;"><img alt="" src="//upload.wikimedia.org/wikibooks/en/thumb/d/df/Navigation_Left_Arrow.svg/18px-Navigation_Left_Arrow.svg.png" width="18" height="14" srcset="//upload.wikimedia.org/wikibooks/en/thumb/d/df/Navigation_Left_Arrow.svg/27px-Navigation_Left_Arrow.svg.png 1.5x, //upload.wikimedia.org/wikibooks/en/thumb/d/df/Navigation_Left_Arrow.svg/36px-Navigation_Left_Arrow.svg.png 2x" data-file-width="165" data-file-height="130"> <a href="/wiki/Java_Programming/Inheritance" title="Java Programming/Inheritance">Inheritance</a></img></td> 
   <td style="text-align:center; width:34%;"><a href="/wiki/Java_Programming" title="Java Programming">Java Programming</a><br> <b>Interfaces</b></br></td> 
   <td style="text-align:right; width:33%; font-size:90%;"><a href="/wiki/Java_Programming/Overloading_Methods_and_Constructors" title="Java Programming/Overloading Methods and Constructors">Overloading Methods and Constructors</a> <img alt="" src="//upload.wikimedia.org/wikibooks/en/thumb/e/ea/Navigation_Right_Arrow.svg/18px-Navigation_Right_Arrow.svg.png" width="18" height="14" srcset="//upload.wikimedia.org/wikibooks/en/thumb/e/ea/Navigation_Right_Arrow.svg/27px-Navigation_Right_Arrow.svg.png 1.5x, //upload.wikimedia.org/wikibooks/en/thumb/e/ea/Navigation_Right_Arrow.svg/36px-Navigation_Right_Arrow.svg.png 2x" data-file-width="165" data-file-height="130" /></td> 
  </tr> 
 </tbody> 
</table> 
<p>An interface is an abstraction of class with no implementation details. For example, <code>java.lang.Comparable</code> is a standard interface in Java. You cannot instantiate an interface. An interface is not a class but it is written the same way. The first difference is that you do not use the <code><a href="/wiki/Java_Programming/Keywords/class" title="Java Programming/Keywords/class"><font style="color:DodgerBlue4; text-decoration: none; font-weight: bold;">class</font></a></code> keyword but the <code><a href="/wiki/Java_Programming/Keywords/interface" title="Java Programming/Keywords/interface"><font style="color:DodgerBlue4; text-decoration: none; font-weight: bold;">interface</font></a></code> keyword to define it. Then, there are fields and methods you cannot define here:</p> 
<ul> 
 <li>A field is always a constant: it is always public, static and final, even if you do not mention it.</li> 
 <li>A method must be public and abstract, but it is not required to write the <code><a href="/wiki/Java_Programming/Keywords/public" title="Java Programming/Keywords/public"><font style="color:DodgerBlue4; text-decoration: none; font-weight: bold;">public</font></a></code> and <code><a href="/wiki/Java_Programming/Keywords/abstract" title="Java Programming/Keywords/abstract"><font style="color:DodgerBlue4; text-decoration: none; font-weight: bold;">abstract</font></a></code> keywords.</li> 
 <li>Constructors are forbidden.</li> 
</ul> 
<p>An interface represents a <i>contract</i>:</p> 
<table style="padding:2px; margin:2px;"> 
 <tbody> 
  <tr valign="top"> 
   <td style="width:32px;"><img alt="Computer code" src="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/32px-Gnome-settings-accessibility-keyboard.svg.png" title="Computer code" width="32" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/48px-Gnome-settings-accessibility-keyboard.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/64px-Gnome-settings-accessibility-keyboard.svg.png 2x" data-file-width="60" data-file-height="60" /></td> 
   <td style="background-color:#ffeee0; border-left: 4px solid orange; padding-left: 6px; font-family: Monaco, Consolas, 'Courier New', Courier; font-size:1.0em; line-height:1.5 !important;"><span id="code-listing-14"><b>Code listing 4.14: SimpleInterface.java</b></span> 
    <div class="mw-highlight mw-content-ltr" dir="ltr"> 
     <pre>
<span class="lineno">1 </span><span class="kd">public</span> <span class="kd">interface</span> <span class="nc">SimpleInterface</span> <span class="o">{</span>
<span class="lineno">2 </span>    <span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">CONSTANT1</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
<span class="lineno">3 </span>    <span class="kt">int</span> <span class="nf">method1</span><span class="o">(</span><span class="n">String</span> <span class="n">parameter</span><span class="o">);</span>
<span class="lineno">4 </span><span class="o">}</span>
</pre> 
    </div> </td> 
  </tr> 
 </tbody> 
</table> 
<p>You can see that the <code>method1()</code> method is abstract (unimplemented). To use an interface, you have to define a class that implements it, using the <code><a href="/wiki/Java_Programming/Keywords/implements" title="Java Programming/Keywords/implements"><font style="color:DodgerBlue4; text-decoration: none; font-weight: bold;">implements</font></a></code> keyword:</p> 
<table style="padding:2px; margin:2px;"> 
 <tbody> 
  <tr valign="top"> 
   <td style="width:32px;"><img alt="Computer code" src="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/32px-Gnome-settings-accessibility-keyboard.svg.png" title="Computer code" width="32" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/48px-Gnome-settings-accessibility-keyboard.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/64px-Gnome-settings-accessibility-keyboard.svg.png 2x" data-file-width="60" data-file-height="60" /></td> 
   <td style="background-color:#ffeee0; border-left: 4px solid orange; padding-left: 6px; font-family: Monaco, Consolas, 'Courier New', Courier; font-size:1.0em; line-height:1.5 !important;"><span id="code-listing-15"><b>Code listing 4.15: ClassWithInterface.java</b></span> 
    <div class="mw-highlight mw-content-ltr" dir="ltr"> 
     <pre>
<span class="lineno">1 </span><span class="hll"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ClassWithInterface</span> <span class="kd">implements</span> <span class="n">SimpleInterface</span> <span class="o">{</span>
</span><span class="lineno">2 </span>    <span class="kt">int</span> <span class="nf">method1</span><span class="o">(</span><span class="n">String</span> <span class="n">parameter</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">3 </span>        <span class="k">return</span> <span class="mi">0</span><span class="o">;</span>
<span class="lineno">4 </span>    <span class="o">}</span>
<span class="lineno">5 </span><span class="o">}</span>
</pre> 
    </div> </td> 
  </tr> 
 </tbody> 
</table> 
<p>A class can implement several interface, separated by a comma. Java interfaces behave much like the concept of the <a href="/wiki/Objective-C_Programming" title="Objective-C Programming">Objective-C</a> protocol. It is recommended to name an interface <code><i>&lt;verb&gt;</i>able</code>, to mean the type of action this interface would enable on a class. However, it is not recommended to start the name of an interface by <code>I</code> as in <a href="/wiki/C%2B%2B_Programming" title="C++ Programming">C++</a>. It is useless. Your IDE will help you instead.</p>
