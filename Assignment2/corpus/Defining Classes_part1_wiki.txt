<p>Every class in Java can be composed of the following elements:</p> 
<ul> 
 <li><b>fields</b> or <b>member variables</b> or <b>instance variables</b> — Fields are variables that hold data specific to each object. For example, an employee might have an ID number. There is one field for each object of a class.</li> 
 <li><b>member methods</b> or <b>instance variables</b> — Member methods perform operations on an object. For example, an employee might have a method to issue his paycheck or to access his name.</li> 
 <li><b>static fields</b> — Static fields are common to any object of the same class. For example, a static field within the Employee class could keep track of the last ID number issued. Only one static field exists for one class.</li> 
 <li><b>static methods</b> — Static methods are methods that do not affect a specific object.</li> 
 <li><b>inner classes</b> — Sometimes it is useful to contain a class within another one if it is useless outside of the class or should not be accessed outside the class.</li> 
 <li><b>Constructors</b> — A special method that generates a new object.</li> 
 <li><b>Parameterized types</b> — Since 1.5, <i>parameterized types</i> can be assigned to a class during definition. The <i>parameterized types</i> will be substituted with the types specified at the class's instantiation. It is done by the compiler. It is similar to the C language macro '#define' statement, where a preprocessor evaluates the macros.</li> 
</ul> 
<table style="padding:2px; margin:2px;"> 
 <tbody> 
  <tr valign="top"> 
   <td style="width:32px;"><img alt="Computer code" src="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/32px-Gnome-settings-accessibility-keyboard.svg.png" title="Computer code" width="32" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/48px-Gnome-settings-accessibility-keyboard.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/64px-Gnome-settings-accessibility-keyboard.svg.png 2x" data-file-width="60" data-file-height="60" /></td> 
   <td style="background-color:#ffeee0; border-left: 4px solid orange; padding-left: 6px; font-family: Monaco, Consolas, 'Courier New', Courier; font-size:1.0em; line-height:1.5 !important;"><span id="code-listing-1"><b>Code listing 4.1: Employee.java</b></span> 
    <div class="mw-highlight mw-content-ltr" dir="ltr"> 
     <pre>
<span class="lineno"> 1 </span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Employee</span> <span class="o">{</span>              <span class="c1">// This defines the Employee class.</span>
<span class="lineno"> 2 </span>                                     <span class="c1">// The public modifier indicates that</span>
<span class="lineno"> 3 </span>                                     <span class="c1">// it can be accessed by any other class</span>
<span class="lineno"> 4 </span>
<span class="lineno"> 5 </span>    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">nextID</span><span class="o">;</span>       <span class="c1">// Define a static field. Only one copy of this will exist,</span>
<span class="lineno"> 6 </span>                                     <span class="c1">// no matter how many Employees are created.</span>
<span class="lineno"> 7 </span>
<span class="lineno"> 8 </span>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">myID</span><span class="o">;</span>                <span class="c1">// Define fields that will be stored  </span>
<span class="lineno"> 9 </span>    <span class="kd">private</span> <span class="n">String</span> <span class="n">myName</span><span class="o">;</span>           <span class="c1">// for each Employee. The private modifier indicates that</span>
<span class="lineno">10 </span>                                     <span class="c1">// only code inside the Employee class can access it.</span>
<span class="lineno">11 </span> 
<span class="lineno">12 </span>    <span class="kd">public</span> <span class="nf">Employee</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>   <span class="c1">// This is a constructor. You can pass a name to the constructor</span>
<span class="lineno">13 </span>                                     <span class="c1">// and it will give you a newly created Employee object.</span>
<span class="lineno">14 </span>        <span class="n">myName</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
<span class="lineno">15 </span>        <span class="n">myID</span> <span class="o">=</span> <span class="n">nextID</span><span class="o">;</span>               <span class="c1">// Automatically assign an ID to the object</span>
<span class="lineno">16 </span>        <span class="n">nextID</span><span class="o">++;</span>                    <span class="c1">// Increment the ID counter</span>
<span class="lineno">17 </span>    <span class="o">}</span>
<span class="lineno">18 </span> 
<span class="lineno">19 </span>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>        <span class="c1">// This is a member method that returns the</span>
<span class="lineno">20 </span>                                     <span class="c1">// Employee object's name.</span>
<span class="lineno">21 </span>        <span class="k">return</span> <span class="n">myName</span><span class="o">;</span>               <span class="c1">// Note how it can access the private field myName.</span>
<span class="lineno">22 </span>    <span class="o">}</span>
<span class="lineno">23 </span> 
<span class="lineno">24 </span>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getID</span><span class="o">()</span> <span class="o">{</span>             <span class="c1">// This is another member method.</span>
<span class="lineno">25 </span>   
<span class="lineno">26 </span>        <span class="k">return</span> <span class="n">myID</span><span class="o">;</span>  
<span class="lineno">27 </span>    <span class="o">}</span>
<span class="lineno">28 </span> 
<span class="lineno">29 </span>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">getNextID</span><span class="o">()</span> <span class="o">{</span>  <span class="c1">// This is a static method that returns the next ID</span>
<span class="lineno">30 </span>                                     <span class="c1">// that will be assigned if another Employee is created.</span>
<span class="lineno">31 </span>        <span class="k">return</span> <span class="n">nextID</span><span class="o">;</span>
<span class="lineno">32 </span>    <span class="o">}</span>
<span class="lineno">33 </span><span class="o">}</span>
</pre> 
    </div> </td> 
  </tr> 
 </tbody> 
</table> 
<p>The following Java code would produce this output:</p> 
<table style="width: 100%;"> 
 <tbody> 
  <tr> 
   <td valign="top"> 
    <table style="padding:2px; margin:2px;"> 
     <tbody> 
      <tr valign="top"> 
       <td style="width:32px;"><img alt="Computer code" src="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/32px-Gnome-settings-accessibility-keyboard.svg.png" title="Computer code" width="32" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/48px-Gnome-settings-accessibility-keyboard.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/64px-Gnome-settings-accessibility-keyboard.svg.png 2x" data-file-width="60" data-file-height="60" /></td> 
       <td style="background-color:#ffeee0; border-left: 4px solid orange; padding-left: 6px; font-family: Monaco, Consolas, 'Courier New', Courier; font-size:1.0em; line-height:1.5 !important;"><span id="code-listing-10"><b>Code listing 4.2: EmployeeList.java</b></span> 
        <div class="mw-highlight mw-content-ltr" dir="ltr"> 
         <pre>
<span class="lineno"> 1 </span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">EmployeeList</span> <span class="o">{</span>
<span class="lineno"> 2 </span>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno"> 3 </span>
<span class="lineno"> 4 </span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Employee</span><span class="o">.</span><span class="na">getNextID</span><span class="o">());</span>
<span class="lineno"> 5 </span> 
<span class="lineno"> 6 </span>        <span class="n">Employee</span> <span class="n">a</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Employee</span><span class="o">(</span><span class="s">"John Doe"</span><span class="o">);</span>
<span class="lineno"> 7 </span>        <span class="n">Employee</span> <span class="n">b</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Employee</span><span class="o">(</span><span class="s">"Jane Smith"</span><span class="o">);</span>
<span class="lineno"> 8 </span>        <span class="n">Employee</span> <span class="n">c</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Employee</span><span class="o">(</span><span class="s">"Sally Brown"</span><span class="o">);</span>
<span class="lineno"> 9 </span> 
<span class="lineno">10 </span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">Employee</span><span class="o">.</span><span class="na">getNextID</span><span class="o">());</span>
<span class="lineno">11 </span> 
<span class="lineno">12 </span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">a</span><span class="o">.</span><span class="na">getID</span><span class="o">()</span> <span class="o">+</span> <span class="s">": "</span> <span class="o">+</span> <span class="n">a</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
<span class="lineno">13 </span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">b</span><span class="o">.</span><span class="na">getID</span><span class="o">()</span> <span class="o">+</span> <span class="s">": "</span> <span class="o">+</span> <span class="n">b</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
<span class="lineno">14 </span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">c</span><span class="o">.</span><span class="na">getID</span><span class="o">()</span> <span class="o">+</span> <span class="s">": "</span> <span class="o">+</span> <span class="n">c</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
<span class="lineno">15 </span>    <span class="o">}</span>
<span class="lineno">16 </span><span class="o">}</span>
</pre> 
        </div> </td> 
      </tr> 
     </tbody> 
    </table> </td> 
   <td valign="top"> 
    <table style="padding:2px; margin:2px;"> 
     <tbody> 
      <tr valign="top"> 
       <td style="width:32px;"><img alt="Computer code" src="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/32px-Gnome-settings-accessibility-keyboard.svg.png" title="Computer code" width="32" height="32" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/48px-Gnome-settings-accessibility-keyboard.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/7/78/Gnome-settings-accessibility-keyboard.svg/64px-Gnome-settings-accessibility-keyboard.svg.png 2x" data-file-width="60" data-file-height="60" /></td> 
       <td style="background-color:#ffeee0; border-left: 4px solid orange; padding-left: 6px; font-family: Monaco, Consolas, 'Courier New', Courier; font-size:1.0em; line-height:1.5 !important;"><b>Console for Code listing 4.2</b> <pre style="background-color:#000; color:#fff;">
0
3
0: John Doe
1: Jane Smith
2: Sally Brown
</pre></td> 
      </tr> 
     </tbody> 
    </table> </td> 
  </tr> 
 </tbody> 
</table>
