<p>Here is the <code>Rectangle</code> class that was presented in the <a class="TutorialLink" target="_top" href="../javaOO/objectcreation.html">Creating Objects</a> section, rewritten to implement <code>Relatable</code>.</p> 
<div class="codeblock"> 
 <pre>
public class RectanglePlus 
    implements Relatable {
    public int width = 0;
    public int height = 0;
    public Point origin;

    // four constructors
    public RectanglePlus() {
        origin = new Point(0, 0);
    }
    public RectanglePlus(Point p) {
        origin = p;
    }
    public RectanglePlus(int w, int h) {
        origin = new Point(0, 0);
        width = w;
        height = h;
    }
    public RectanglePlus(Point p, int w, int h) {
        origin = p;
        width = w;
        height = h;
    }

    // a method for moving the rectangle
    public void move(int x, int y) {
        origin.x = x;
        origin.y = y;
    }

    // a method for computing
    // the area of the rectangle
    public int getArea() {
        return width * height;
    }
    
    // a method required to implement
    // the Relatable interface
    public int isLargerThan(Relatable other) {
        <strong>RectanglePlus otherRect 
            = (RectanglePlus)other;</strong>
        if (this.getArea() &lt; otherRect.getArea())
            return -1;
        else if (this.getArea() &gt; otherRect.getArea())
            return 1;
        else
            return 0;               
    }
}
</pre> 
</div> 
<p>Because <code>RectanglePlus</code> implements <code>Relatable</code>, the size of any two <code>RectanglePlus</code> objects can be compared.</p> 
<div class="note"> 
 <hr> 
  <strong>Note:</strong>&nbsp;The 
  <code>isLargerThan</code> method, as defined in the 
  <code>Relatable</code> interface, takes an object of type 
  <code>Relatable</code>. The line of code, shown in bold in the previous example, casts 
  <code>other</code> to a 
  <code>RectanglePlus</code> instance. Type casting tells the compiler what the object really is. Invoking 
  <code>getArea</code> directly on the 
  <code>other</code> instance ( 
  <code>other.getArea()</code>) would fail to compile because the compiler does not understand that 
  <code>other</code> is actually an instance of 
  <code>RectanglePlus</code>. 
  <hr> 
  </hr>
 </hr>
</div>
